--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.17) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v90=0;local v91;while true do if (v90==1) then return v91;end if (v90==0) then v91=v5(v83,v19);v19=nil;v90=1;end end else return v83;end end end);local function v20(v31,v32,v33)if v33 then local v84=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-((1 + 0) -0)) -(v32-(878 -(282 + 595)))) + (2 -1))) ;return v84-(v84%1) ;else local v85=619 -(555 + 64) ;local v86;while true do if (v85==((2568 -(1523 + 114)) -(857 + 74))) then v86=(570 -(367 + 201))^(v32-((834 + 94) -(214 + 713))) ;return (((v31%(v86 + v86))>=v86) and 1) or (0 + 0) ;end end end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(1066 -(68 + 997))) then return v35;end if (v34==(1270 -(222 + 4 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + (4 -3) ;v34=118 -(32 + 85) ;end end end local function v22()local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + 1 + 1 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + ((186 -(67 + 113)) -2) ;return (v41 * (30800116 -14022900)) + (v40 * (65886 -(87 + 263))) + (v39 * 256) + v38 ;end local function v24()local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==1) then v45=(432 -(44 + 386)) -1 ;v46=(v20(v44,1 + 0 ,79 -59 ) * (2^(984 -(802 + 150)))) + v43 ;v42=5 -3 ;end if (v42==(3 -1)) then v47=v20(v44,16 + 5 ,1028 -(915 + 82) );v48=((v20(v44,32)==(2 -1)) and  -(1 + 0)) or 1 ;v42=3 -0 ;end if (v42==(1187 -((2555 -(998 + 488)) + 118))) then v43=v23();v44=v23();v42=(1 + 1) -(1 + 0) ;end if (v42==(6 -3)) then if (v47==(0 + 0)) then if (v46==(0 -(772 -(201 + 571)))) then return v48 * (0 + 0) ;else v47=792 -(368 + 423) ;v45=0 -0 ;end elseif (v47==(2065 -(10 + (1146 -(116 + 1022))))) then return ((v46==(0 -0)) and (v48 * ((443 -(416 + 26))/(0 -(0 -0))))) or (v48 * NaN) ;end return v8(v48,v47-(440 + 583) ) * (v45 + (v46/((3 -1)^(490 -(145 + 293))))) ;end end end local function v25(v49)local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;local v51={};for v66=3 -2 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52~=(2 -1)) then else v55=nil;v56=nil;v52=2;end if (v52~=(3 + 0)) then else v59=nil;while true do if (v53~=(1 -0)) then else local v96=0 -0 ;while true do if (v96~=(1258 -(1043 + 214))) then else v59={};v53=5 -3 ;break;end if (v96~=(285 -(134 + 151))) then else v57={v54,v55,nil,v56};v58=v23();v96=1991 -(582 + 1408) ;end end end if (v53~=(10 -7)) then else local v97=0 -0 ;local v98;while true do if (v97~=0) then else v98=0 -0 ;while true do if ((0 -0)~=v98) then else for v136=1825 -(1195 + 629) ,v23() do v55[v136-(581 -(361 + 219)) ]=v28();end return v57;end end break;end end end if (v53~=(0 -0)) then else v54={};v55={};v56={};v53=242 -(187 + 54) ;end if (v53==(322 -(53 + 267))) then local v99=0;local v100;while true do if (v99==(780 -(162 + 618))) then v100=0;while true do if (v100~=(0 + 0)) then else local v101=0 + 0 ;while true do if (v101==(414 -(15 + 398))) then v100=1;break;end if (0==v101) then for v189=1,v58 do local v190=0;local v191;local v192;local v193;local v194;while true do if ((0 -0)~=v190) then else v191=0;v192=nil;v190=1;end if (v190==1) then v193=nil;v194=nil;v190=2;end if (v190==(2 -0)) then while true do if (v191~=(0 + 0)) then else local v213=0;while true do if (v213~=(1637 -(1373 + 263))) then else v191=1001 -(451 + 549) ;break;end if ((0 + 0)~=v213) then else v192=0;v193=nil;v213=1 -0 ;end end end if (v191==(1 -0)) then v194=nil;while true do if (v192~=(1384 -(746 + 638))) then else local v220=0;local v221;while true do if (v220==0) then v221=0 + 0 ;while true do if (v221==0) then local v225=0 + 0 ;while true do if (v225~=(0 + 0)) then else v193=v21();v194=nil;v225=1 -0 ;end if (v225==(342 -(218 + 123))) then v221=1582 -(1535 + 46) ;break;end end end if (v221==(127 -(116 + 10))) then v192=1 + 0 ;break;end end break;end end end if (v192==1) then if (v193==1) then v194=v21()~=(738 -(542 + 196)) ;elseif (v193==(2 + 0)) then v194=v24();elseif (v193~=(1 + 2)) then else v194=v25();end v59[v189]=v194;break;end end break;end end break;end end end v57[563 -(306 + 254) ]=v21();v101=1;end end end if (v100~=(1 + 0)) then else for v138=1 + 0 ,v23() do local v139=0 -0 ;local v140;local v141;local v142;while true do if ((0 -0)~=v139) then else v140=0;v141=nil;v139=1;end if (v139~=1) then else v142=nil;while true do if (v140==0) then local v210=0;while true do if (v210~=(2 -1)) then else v140=1468 -(899 + 568) ;break;end if (v210==(405 -(118 + 287))) then v141=0;v142=nil;v210=1 + 0 ;end end end if ((2 -1)~=v140) then else while true do if ((603 -(268 + 335))==v141) then v142=v21();if (v20(v142,1122 -(118 + 1003) ,291 -(60 + 230) )~=0) then else local v214=572 -(426 + 146) ;local v215;local v216;local v217;local v218;local v219;while true do if (v214==(1 + 1)) then v219=nil;while true do if (v215==(1456 -(282 + 1174))) then v216=0;v217=nil;v215=812 -(569 + 242) ;end if (v215==(1 + 1)) then while true do if (v216~=(2 -1)) then else local v226=0 -0 ;local v227;while true do if ((0 + 0)~=v226) then else v227=0;while true do if (v227==0) then local v239=1024 -(706 + 318) ;while true do if (v239==(1252 -(721 + 530))) then v227=1272 -(945 + 326) ;break;end if (v239~=(0 -0)) then else v219={v22(),v22(),nil,nil};if (v217==(0 -0)) then local v241=0 + 0 ;local v242;local v243;while true do if (v241==(701 -(271 + 429))) then while true do if (v242~=0) then else v243=0 + 0 ;while true do if (v243==(1500 -(1408 + 92))) then v219[3]=v22();v219[4]=v22();break;end end break;end end break;end if (v241==0) then v242=0 -0 ;v243=nil;v241=754 -(239 + 514) ;end end elseif (v217==1) then v219[2 + 1 ]=v23();elseif (v217==(1088 -(461 + 625))) then v219[1332 -(797 + 532) ]=v23() -((2 + 0)^(1304 -(993 + 295))) ;elseif (v217~=(1 + 2)) then else local v246=1171 -(418 + 753) ;local v247;while true do if (v246==(0 + 0)) then v247=731 -(476 + 255) ;while true do if (v247==(1130 -(369 + 761))) then v219[2 + 1 ]=v23() -((2 -0)^(29 -13)) ;v219[4]=v22();break;end end break;end end end v239=1;end end end if (v227~=(239 -(64 + 174))) then else v216=1 + 1 ;break;end end break;end end end if (v216==2) then local v228=0 + 0 ;while true do if (v228~=1) then else v216=339 -(144 + 192) ;break;end if (0~=v228) then else if (v20(v218,1,1 + 0 )~=(530 -(406 + 123))) then else v219[2]=v59[v219[1771 -(1749 + 20) ]];end if (v20(v218,2 + 0 ,2)==(1 + 0)) then v219[2 + 1 ]=v59[v219[3]];end v228=1323 -(1249 + 73) ;end end end if ((2 + 1)==v216) then if (v20(v218,1507 -(363 + 1141) ,3)~=(1146 -(466 + 679))) then else v219[9 -5 ]=v59[v219[11 -7 ]];end v54[v138]=v219;break;end if (v216==0) then local v230=0 + 0 ;local v231;while true do if (v230==(0 + 0)) then v231=0 -0 ;while true do if (v231==(1900 -(106 + 1794))) then local v240=1975 -(1913 + 62) ;while true do if (v240~=1) then else v231=1 + 0 ;break;end if (v240~=0) then else v217=v20(v142,2,1 + 2 );v218=v20(v142,11 -7 ,6);v240=1;end end end if (v231==1) then v216=1;break;end end break;end end end end break;end if (v215==(2 -1)) then local v223=114 -(4 + 110) ;local v224;while true do if (v223==0) then v224=584 -(57 + 527) ;while true do if (v224==(1428 -(41 + 1386))) then v215=105 -(17 + 86) ;break;end if (v224==0) then local v234=0 + 0 ;while true do if (v234~=(1 -0)) then else v224=1;break;end if (v234~=0) then else v218=nil;v219=nil;v234=1 -0 ;end end end end break;end end end end break;end if (v214==(0 -0)) then v215=166 -(122 + 44) ;v216=nil;v214=1;end if (v214==(1 -0)) then v217=nil;v218=nil;v214=858 -(564 + 292) ;end end end break;end end break;end end break;end end end v53=9 -6 ;break;end end break;end end end end break;end if (v52~=(0 -0)) then else v53=0 -0 ;v54=nil;v52=1 + 0 ;end if (v52~=2) then else v57=nil;v58=nil;v52=1 + 2 ;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=19) then if (v81<=9) then if (v81<=4) then if (v81<=1) then if (v81>0) then local v102=v80[2];v78[v102]=v78[v102](v13(v78,v102 + 1 ,v73));else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=2) then local v105=v80[2];local v106=v78[v80[3]];v78[v105 + 1 ]=v106;v78[v105]=v106[v80[4]];elseif (v81>3) then local v144=0;local v145;local v146;local v147;local v148;while true do if (v144==1) then v73=(v147 + v145) -1 ;v148=0;v144=2;end if (v144==0) then v145=v80[2];v146,v147=v71(v78[v145](v13(v78,v145 + 1 ,v80[3])));v144=1;end if (v144==2) then for v206=v145,v73 do v148=v148 + 1 ;v78[v206]=v146[v148];end break;end end else v78[v80[2]]=v80[3];end elseif (v81<=6) then if (v81==5) then v78[v80[2]]={};elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=7) then local v111=v80[3];local v112=v78[v111];for v143=v111 + 1 ,v80[4] do v112=v112   .. v78[v143] ;end v78[v80[2]]=v112;elseif (v81==8) then local v152=0;local v153;while true do if (v152==0) then v153=v80[2];v78[v153](v13(v78,v153 + 1 ,v80[3]));break;end end else for v184=v80[2],v80[3] do v78[v184]=nil;end end elseif (v81<=14) then if (v81<=11) then if (v81>10) then local v114=v80[2];v78[v114]=v78[v114](v13(v78,v114 + 1 ,v80[3]));else do return;end end elseif (v81<=12) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==13) then v78[v80[2]][v80[3]]=v78[v80[4]];else v78[v80[2]]=v78[v80[3]];end elseif (v81<=16) then if (v81>15) then v72=v80[3];else v78[v80[2]]={};end elseif (v81<=17) then v78[v80[2]]();elseif (v81==18) then local v158=v80[2];local v159=v78[v80[3]];v78[v158 + 1 ]=v159;v78[v158]=v159[v80[4]];else do return;end end elseif (v81<=29) then if (v81<=24) then if (v81<=21) then if (v81==20) then if ((v80[3]=="_ENV") or (v80[3]=="getfenv")) then v78[v80[2]]=v62;else v78[v80[2]]=v62[v80[3]];end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=22) then local v120=v80[2];v78[v120]=v78[v120](v13(v78,v120 + 1 ,v80[3]));elseif (v81>23) then local v167=v80[2];v78[v167](v13(v78,v167 + 1 ,v80[3]));else for v186=v80[2],v80[3] do v78[v186]=nil;end end elseif (v81<=26) then if (v81>25) then v72=v80[3];else v78[v80[2]]=v78[v80[3]];end elseif (v81<=27) then if ((v80[3]=="_ENV") or (v80[3]=="getfenv")) then v78[v80[2]]=v62;else v78[v80[2]]=v62[v80[3]];end elseif (v81==28) then v78[v80[2]]=v80[3];else local v173=v80[2];v78[v173]=v78[v173]();end elseif (v81<=34) then if (v81<=31) then if (v81==30) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=32) then v78[v80[2]]();elseif (v81==33) then local v175=0;local v176;local v177;while true do if (v175==1) then for v209=v176 + 1 ,v80[4] do v177=v177   .. v78[v209] ;end v78[v80[2]]=v177;break;end if (v175==0) then v176=v80[3];v177=v78[v176];v175=1;end end else local v178=0;local v179;while true do if (v178==0) then v179=v80[2];v78[v179]=v78[v179]();break;end end end elseif (v81<=36) then if (v81==35) then local v127=0;local v128;local v129;local v130;local v131;while true do if (v127==0) then v128=v80[2];v129,v130=v71(v78[v128](v13(v78,v128 + 1 ,v80[3])));v127=1;end if (v127==2) then for v195=v128,v73 do local v196=0;while true do if (0==v196) then v131=v131 + 1 ;v78[v195]=v129[v131];break;end end end break;end if (v127==1) then v73=(v130 + v128) -1 ;v131=0;v127=2;end end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=37) then v78[v80[2]][v80[3]]=v80[4];elseif (v81>38) then local v180=0;local v181;while true do if (v180==0) then v181=v80[2];v78[v181]=v78[v181](v13(v78,v181 + 1 ,v73));break;end end else v78[v80[2]]=v29(v69[v80[3]],nil,v62);end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
